name: Build, Test, and Deploy

on:
  workflow_call:
    secrets:
      CC_TEST_REPORTER_ID:
        required: true
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Node Version
        uses: actions/setup-node@v4
        with:
          node-version: lts/iron

      - name: Install
        run: npm ci

      - name: Build and package library
        run: npm run package

      - name: Format
        run: npm run format:check

      - name: Build
        run: npm run build

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

      - name: Test
        run: npm run ci

      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: coverage
          path: coverage/ngx-datatable-lib

      - name: Publish coverage results
        uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: ${{github.workspace}}/coverage/ngx-datatable-lib/lcov.info:lcov
        if: env.CC_TEST_REPORTER_ID

      - name: Build Docs
        run: npm run build-docs

  e2e:
    runs-on: ubuntu-latest
    needs: build
    container: mcr.microsoft.com/playwright:v1.46.0-jammy
    steps:
      # We cannot use built-in LFS functionality due to the missing support of custom LFS endpoints.
      # See: https://github.com/actions/checkout/issues/365
      # As we are in another container, we even need to install LFS manually.
      - name: Install LFS
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
          apt install git-lfs

      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull Repository with LFS
        run: git lfs pull

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/ngx-datatable

      - name: Install
        run: npm ci

      - name: E2E
        run: npm run e2e

      - name: Upload E2E Results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results
          path: playwright/results
